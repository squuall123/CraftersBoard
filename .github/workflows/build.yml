name: Build and Release CraftersBoard

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  ADDON_NAME: CraftersBoard

jobs:
  package:
    name: Package Addon
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    outputs:
      version: ${{ steps.version.outputs.version }}
      artifact-name: ${{ steps.package.outputs.artifact-name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version
        id: version
        run: |
          VERSION=$(grep "^## Version:" CraftersBoard.toc | cut -d' ' -f3)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Addon version: $VERSION"

      - name: Package addon
        id: package
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          PACKAGE_NAME="${ADDON_NAME}-${VERSION}"
          
          echo "Creating package: $PACKAGE_NAME"
          
          # Create package directory
          mkdir -p "package/$ADDON_NAME"
          
          # Copy addon files (exclude development files)
          rsync -av \
            --exclude='.git*' \
            --exclude='.github' \
            --exclude='.vscode' \
            --exclude='*.md' \
            --exclude='package' \
            --exclude='Data/Backup_Old_Files' \
            . "package/$ADDON_NAME/"
          
          # Create zip archive
          cd package
          zip -r "../${PACKAGE_NAME}.zip" "$ADDON_NAME"
          cd ..
          
          echo "artifact-name=${PACKAGE_NAME}.zip" >> $GITHUB_OUTPUT
          echo "Package created: ${PACKAGE_NAME}.zip"
          
          # Show package contents
          echo "Package contents:"
          unzip -l "${PACKAGE_NAME}.zip"

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.package.outputs.artifact-name }}
          path: ${{ steps.package.outputs.artifact-name }}
          retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: package
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.package.outputs.artifact-name }}

      - name: Extract tag name
        id: tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "Tag: $TAG_NAME"

      - name: Generate changelog
        id: changelog
        run: |
          echo "Generating changelog for ${{ steps.tag.outputs.tag }}..."
          
          # Create a basic changelog from recent commits
          echo "## Changes in ${{ steps.tag.outputs.tag }}" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          # Get commits since last tag (or first 10 if no previous tags)
          if git describe --tags --abbrev=0 HEAD^ >/dev/null 2>&1; then
            LAST_TAG=$(git describe --tags --abbrev=0 HEAD^)
            echo "Changes since $LAST_TAG:" >> CHANGELOG.md
            git log --pretty=format:"- %s" $LAST_TAG..HEAD >> CHANGELOG.md
          else
            echo "Initial release changes:" >> CHANGELOG.md
            git log --pretty=format:"- %s" -10 >> CHANGELOG.md
          fi
          
          echo "" >> CHANGELOG.md
          echo "## Installation" >> CHANGELOG.md
          echo "1. Download the \`${{ needs.package.outputs.artifact-name }}\` file" >> CHANGELOG.md
          echo "2. Extract to your \`Interface/AddOns/\` directory" >> CHANGELOG.md
          echo "3. Restart World of Warcraft" >> CHANGELOG.md
          echo "4. Type \`/cb\` to open CraftersBoard" >> CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: CraftersBoard ${{ steps.tag.outputs.tag }}
          body_path: CHANGELOG.md
          files: ${{ needs.package.outputs.artifact-name }}
          draft: false
          prerelease: ${{ contains(steps.tag.outputs.tag, 'alpha') || contains(steps.tag.outputs.tag, 'beta') || contains(steps.tag.outputs.tag, 'rc') }}

  # Optional: Deploy to CurseForge (requires API key)
  curseforge:
    name: Deploy to CurseForge
    runs-on: ubuntu-latest
    needs: [package, release]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && vars.DEPLOY_TO_CURSEFORGE == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.package.outputs.artifact-name }}

      - name: Upload to CurseForge
        uses: itsmeow/curseforge-upload@v3
        with:
          token: ${{ secrets.CURSEFORGE_TOKEN }}
          project_id: 1330109  # From TOC file X-Curse-Project-ID
          file_path: ${{ needs.package.outputs.artifact-name }}
          changelog: |
            See the full changelog at: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
          changelog_type: markdown
          game_endpoint: wow
          game_versions: "11507"  # Classic Era
          release_type: release
