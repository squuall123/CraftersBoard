SPELL ID LOOKUP IMPROVEMENTS - SUMMARY
=====================================

PROBLEM IDENTIFIED:
- Some recipes showing "No spell ID captured" warnings
- Recipe_Master data has different patterns for different recipe types
- Need to handle recipes that don't create items (enchantments, etc.)

IMPROVEMENTS MADE:
==================

1. ENHANCED GetSpellIdFromItemId() FUNCTION:
   - Now handles recipes with explicit spellId field
   - Handles recipes where key IS the spell ID (for non-item recipes)
   - Better logging and fallback logic

2. ADDED GetSpellIdBySpellKey() FUNCTION:
   - Specifically for recipes where the database key is the spell ID
   - Handles enchantments and other non-item recipes
   - Validates spell ID exists using GetSpellInfo()

3. ENHANCED GetSpellIdFromRecipeMasterData() FUNCTION:
   - Method 1: Match by item name (for item-creating recipes)
   - Method 2: Match by spell name (for non-item recipes)
   - Better handling of different recipe types

4. IMPROVED ScanRecipe() FUNCTION:
   - Method 1: Direct spell ID from GetTradeSkillRecipeLink()
   - Method 2: Item ID extraction + Recipe_Master lookup
   - Method 2.5: Direct spell ID lookup for non-item recipes (NEW)
   - Method 3: Name matching fallback
   - Better debugging and edge case handling

RECIPE_MASTER DATA PATTERNS DISCOVERED:
=======================================

From analyzing the data structure, recipes fall into these categories:

TYPE A - Item-Creating Recipes (like Alchemy potions):
[118] = {
    difficulty = {},
    itemId = 118,        -- Item that gets created
    skill = 1,
    spellId = 2330,      -- Spell that creates the item
}

TYPE B - Non-Item Recipes (like direct enchantments):
[6218] = {
    difficulty = {},
    skill = 1,
    -- No itemId or spellId - the key 6218 IS the spell ID
}

TYPE C - Scroll-Creating Enchantments:
[6342] = {
    difficulty = {},
    itemId = 7443,       -- Enchanting scroll item
    skill = 20,
    -- No spellId - uses different pattern
}

TESTING INSTRUCTIONS:
====================

1. Run enhanced diagnostic:
   /run loadfile("Interface\\AddOns\\CraftersBoard\\debug_data_loading.lua")()

2. Enable debug mode and test profession scanning:
   /script CRAFTERSBOARD_DB = {debug = true}
   
3. Open profession window and scan recipes
   Look for these new messages:
   - "Key-as-spellId match - using key X as spell ID"
   - "Found non-item recipe - spellId X"
   - "Confirmed spell ID X via spell key lookup"

4. Check if more recipes now have spell IDs captured

EXPECTED IMPROVEMENTS:
======================
- Recipes that create items: Should work with item ID lookup
- Direct enchantments: Should work with spell key lookup  
- Enchanting scrolls: Should work with item ID lookup
- Other edge cases: Should have better fallback coverage

The multi-method approach should now handle the different Recipe_Master 
data patterns and significantly reduce "No spell ID captured" warnings.

NEXT STEPS IF ISSUES PERSIST:
=============================
1. Run the diagnostic to see which recipe types are still failing
2. Check if WoW API functions return different data than expected
3. May need profession-specific handling for special cases
4. Consider adding recipe ID extraction from other WoW API sources
